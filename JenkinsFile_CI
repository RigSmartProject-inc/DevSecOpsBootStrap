pipeline {
    agent any
    
    tools {
       nodejs 'nodejs'
        
    }
    
    environment {
            SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
               git branch: 'dev', credentialsId: '35104275-6980-41e9-849c-634e81e3907a', url: 'https://github.com/RigSmartProject-inc/DevSecOpsBootStrap.git'
            }
        }
        
         stage('Frontend Compillation') {
            steps {
                dir('client') {
                   sh  'find . -name "*.js" -exec node --check {} +'
                        }
            }
        }
         stage('Backend Compillation') {
            steps {
                dir('api') {
                   sh  'find . -name "*.js" -exec node --check {} +'
                        }
            }
        }
        stage('GitLeaks Scan') {
              steps {
                sh '''
                  if ! command -v gitleaks >/dev/null; then
                    echo "‚ùå GitLeaks is not installed!"
                    exit 127
                  fi
                  gitleaks detect --source ./client --exit-code 1
                  gitleaks detect --source ./api --exit-code 1
                '''
              }
         }
        
         stage('Static Code Analysis') {
            steps {
               withSonarQubeEnv('sonar') {
               sh ''' $SCANNER_HOME/bin/sonar-scanner  -Dsonar.projectName=NodeJS-Project \
                  -Dsonar.projectKey=NodeJS-Project
               '''
                }
            }
        }
        
         stage('Qualty Gate Check') {
            steps {
               timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonarqube-auth-token' // some block
                }
            }
        }
        stage('Trivy FS Scan') {
            steps {
              sh 'trivy fs --format table -o fs-report.html .'
            }
        }
    }
}
