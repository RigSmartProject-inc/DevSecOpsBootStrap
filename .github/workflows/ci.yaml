name: CI Pipeline

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # ───────────────────────────────────────────────
    # SonarScanner Static Code Analysis
    - name: Install SonarScanner
      run: |
        sudo apt update
        sudo apt install -y unzip openjdk-17-jre
        curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
        unzip sonar-scanner.zip
        sudo mv sonar-scanner-*/bin/sonar-scanner /usr/local/bin/sonar-scanner

    - name: Run SonarQube Analysis
      run: |
        sonar-scanner \
          -Dsonar.projectKey=NodeJS-Project \
          -Dsonar.projectName=NodeJS-Project \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

    - name: Wait for SonarQube Quality Gate Result
      run: |
        sudo apt-get install -y jq
        CE_TASK_URL=$(grep ceTaskUrl .scannerwork/report-task.txt | cut -d'=' -f2)
        for i in {1..20}; do
          STATUS=$(curl -s -u "$SONAR_TOKEN:" "$CE_TASK_URL" | jq -r .task.status)
          echo "SonarQube Task Status: $STATUS"
          if [ "$STATUS" = "SUCCESS" ]; then break; fi
          sleep 5
        done
        ANALYSIS_ID=$(curl -s -u "$SONAR_TOKEN:" "$CE_TASK_URL" | jq -r .task.analysisId)
        GATE_STATUS=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/qualitygates/project_status?analysisId=$ANALYSIS_ID" | jq -r .projectStatus.status)
        echo "Quality Gate: $GATE_STATUS"
        if [ "$GATE_STATUS" != "OK" ]; then
          echo "❌ Quality Gate failed"
          exit 1
        fi

    # ───────────────────────────────────────────────
    # Trivy Scan
    - name: Install Trivy
      run: |
        sudo apt-get install -y wget
        wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.50.1_Linux-64bit.deb

    - name: Run Trivy File System Scan
      run: |
        trivy fs --format table -o fs-report.html . || true

    - name: Upload Trivy Report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-fs-report
        path: fs-report.html
